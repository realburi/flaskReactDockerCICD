{"version":3,"sources":["components/button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","console","log","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","Math","floor","random","newTask","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaaad6ea.chunk.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\r\nimport * as buffer from \"buffer\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} style={{backgroundColor: color}} className={'btn'}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: \"steelblue\"\r\n}\r\n\r\nButton.propTypes = {\r\n     text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button","import PropTypes from \"prop-types\"\r\nimport Button from \"./button\";\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"Close\" : \"Add\"} onClick={onAdd} />\r\n            {console.log(showAdd)}\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Header","import {FaTimes} from \"react-icons/fa\";\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3 key={task.id}>\r\n                {task.text} <FaTimes style={{\r\n                    color: \"red\",\r\n                    cursor: \"pointer\"\r\n            }} onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => (\r\n                <Task\r\n                    key={task.id}\r\n                    task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add Task')\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task'\r\n                       value={text}\r\n                       onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day and Time'\r\n                       value={day}\r\n                       onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                       value={reminder}\r\n                       checked={reminder}\r\n                       onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type='submit' value='Save Task' className={'btn btn-block'}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import Header from \"./components/Header\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport {useEffect, useState} from 'react'\r\n\r\n\r\nfunction App() {\r\n    const [showAddTask, setAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([]\r\n    )\r\n\r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            const tasksFromServer = await fetchTasks();\r\n            setTasks(tasksFromServer)\r\n        }\r\n        getTasks();\r\n    }, [])\r\n\r\n    // Fetch tasks\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:5000/tasks')\r\n        return await res.json()\r\n    }\r\n\r\n    // Add Task\r\n    const addTask = (task) => {\r\n        const id = Math.floor(Math.random() * 10000 + 1)\r\n        const newTask = {id, ...task}\r\n        setTasks([...tasks, newTask])\r\n    }\r\n\r\n    // Delete Task\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n        console.log('delete', id)\r\n    }\r\n\r\n    // Toggle Reminder\r\n    const toggleReminder = (id) => {\r\n        console.log(\"Toggling \" + id)\r\n        setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder}: task))\r\n    }\r\n\r\n    // add button to toggle form\r\n\r\n    return (\r\n      <div className=\"App container\">\r\n          <Header onAdd={() => setAddTask(!showAddTask)} showAdd={showAddTask}/>\r\n          {showAddTask && <AddTask onAdd={addTask}/>}\r\n          {tasks.length !== 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : \"No Tasks to show\" }\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}